stages:
  - build
  - test
  - package
  - deploy

variables:
  NEXUS_USER: "${NEXUS_USERNAME}"
  NEXUS_PW: "${NEXUS_PASSWORD}"
  SETTINGS: "/builds/$CI_PROJECT_PATH/.m2/settings.xml"
  MAVEN_CLI_OPTS: "-B -s $SETTINGS"
  NEXUS_SNAPSHOT_NAME: "${NEXUS_DEV_REPO}"
  NEXUS_SNAPSHOT_URL: "${NEXUS_DEV_REPO_URL}"
  NEXUS_RELEASE_NAME: "${NEXUS_MAIN_REPO}"
  NEXUS_RELEASE_URL: "${NEXUS_MAIN_REPO_URL}"

before_script:
  - mkdir -p /builds/$CI_PROJECT_PATH/.m2
  # Create the settings.xml file with credentials from environment variables
  - echo "<settings><servers><server><id>$NEXUS_SNAPSHOT_NAME</id><username>$NEXUS_USER</username><password>$NEXUS_PW</password></server></servers></settings>" > $SETTINGS

after_script: rm $SETTINGS

build:
  stage: build
  script:
    - 'if [[ -f "$SETTINGS" ]]; then echo "settings.xml file found"; else echo "settings.xml file could not be found in: $SETTINGS"; exit 1; fi'
    - echo "Compiling with Nexus Repo=$NEXUS_RELEASE_NAME on URL=$NEXUS_RELEASE_URL FILE=target/$JAR_FILE with USERNAME=$NEXUS_USER"
    - mvn compile $MAVEN_CLI_OPTS


test:
  stage: test
  script:
    - mvn test $MAVEN_CLI_OPTS

package:
  stage: package
  only:
    - master
    - develop
  script:
    - mvn clean package $MAVEN_CLI_OPTS
  artifacts:
    paths:
      - target/*.jar  # Save the JAR file as an artifact for later stages

deploy_snapshots:
  stage: deploy
  only:
    refs:
      - develop
  script:
    - export JAR_FILE=$(mvn help:evaluate -Dexpression=project.build.finalName -q -DforceStdout).jar
    # Verify if the JAR file exists before deploying
    - 'if [[ -f "target/$JAR_FILE" ]]; then echo "JAR file found: $JAR_FILE"; else echo "JAR file $JAR_FILE not found in target/"; exit 1; fi'
    - 'if [[ -f "$SETTINGS" ]]; then echo "settings.xml file found"; else echo "settings.xml file could not be found in: $SETTINGS"; exit 1; fi'

    # Deploy the jar file using Maven
    - echo "Deploying to Nexus Repo=$NEXUS_SNAPSHOT_NAME on URL=$NEXUS_SNAPSHOT_URL FILE=$JAR_FILE with USERNAME=$NEXUS_USER"
    - mvn deploy:deploy-file -Durl=$NEXUS_SNAPSHOT_URL -DrepositoryId=$NEXUS_SNAPSHOT_NAME -Dfile=target/$JAR_FILE -DpomFile=pom.xml $MAVEN_CLI_OPTS

deploy_releases:
  stage: deploy
  rules:
    - if: '$CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH'  # Run if it's the default branch
  when: manual
  allow_failure: false
  script:
    # Get the jar file dynamically using Maven property
    - export JAR_FILE=$(mvn help:evaluate -Dexpression=project.build.finalName -q -DforceStdout).jar
    # Verify if the JAR file exists before deploying
    - 'if [[ -f "target/$JAR_FILE" ]]; then echo "JAR file found: $JAR_FILE"; else echo "JAR file $JAR_FILE not found in target/"; exit 1; fi'
    - 'if [[ -f "$SETTINGS" ]]; then echo "settings.xml file found"; else echo "settings.xml file could not be found in: $SETTINGS"; exit 1; fi'

    # Deploy the jar file using Maven
    - echo "Deploying to Nexus Repo=$NEXUS_RELEASE_NAME on URL=$NEXUS_RELEASE_URL FILE=$JAR_FILE with USERNAME=$NEXUS_USER"
    - mvn deploy:deploy-file -Durl=$NEXUS_RELEASE_URL -DrepositoryId=$NEXUS_RELEASE_NAME -Dfile=target/$JAR_FILE -DpomFile=pom.xml $MAVEN_CLI_OPTS